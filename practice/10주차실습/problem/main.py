import time
import random

'''
    Problem: Selection Sort와 Insertion Sort를 구현하고자 한다.
    아래 보이는 출력이 될 수 있도록, 각각의 sort 함수를 완성.
    * 각 문제에서 원하는 구현이 되도록 모든 block을 채워 넣기.
    * 결과 출력과 시간 비교도 함께 확인할 것.
'''

def print_array(arr, label="Array"):
    print(f"{label} = ", end="")
    for value in arr:
        print(f"{value:3}", end=" ")
    print()

def swap(x, y, list):
    list[x], list[y] = list[y], list[x]

def selection_sort(list_in):
    list_out = list_in.copy()
    n = len(list_out)
    for i in range(n-1):
        least = i
        for j in range (i+1,n):
            if(list_out[j]<list_out[least]):
                least = j
        
        swap(i,least,list_out)
        ##########################
        #                        #
        #          block         #
        #                        #
        ##########################
    return list_out

def insertion_sort(list_in):
    list_out = list_in.copy()
    n = len(list_out)
    for i in range(1, n):
        key = list_out[i]
        j = i - 1
        while j>=0 and list_out[j]>key:
            list_out[j+1] = list_out[j]
            j -=1
        list_out[j+1] = key
        ##########################
        #                        #
        #          block         #
        #                        #
        ##########################
    return list_out

def generate_case(case_type):
    if case_type == "sorted": #이미 정렬된 배열
        return list(range(200))
    elif case_type == "reversed": #역순 배열
        return list(range(200, 0, -1))
    elif case_type == "almost_sorted": #거의 정렬된 배열, 100이랑 101 위치 교환
        lst = list(range(200))
        lst[100], lst[101] = lst[101], lst[100]
        return lst
    elif case_type == "many_duplicates": # 값 500이 100개, 그외 무작위 값 100개
        return [500] * 100 + [random.randint(0, 1000) for _ in range(100)]
    elif case_type == "random": #완전 무작위 값 배열
        return [random.randint(0, 1000) for _ in range(200)]

def main():
    case_type = "many_duplicates"  # Change this to test different cases
    list = generate_case(case_type)
    
    print_array(list, "Original")
    
    ## Selection Sort
    print()
    sel_t0 = time.perf_counter()
    sel_list = selection_sort(list)
    sel_t1 = time.perf_counter()
    print_array(sel_list, "Selection Sort")
    print(f"Selection Sort time : {(sel_t1 - sel_t0) * 1000:.2f} ms")
    
    ## Insertion Sort
    print()
    ins_t0 = time.perf_counter()
    ins_list = insertion_sort(list)
    ins_t1 = time.perf_counter()
    print_array(ins_list, "Insertion Sort")
    print(f"Insertion Sort time : {(ins_t1 - ins_t0) * 1000:.2f} ms")
    
    ## -> 출력:
    ## Original =  
    ##
    ## Selection Sort =  
    ## Selection Sort time : 0.00 ms
    ## 
    ## Insertion Sort =  
    ## Insertion Sort time : 0.00 ms
    
    ## 각 case type에 대해 아래 주석을 채워넣을 것:
    ## case_type = "sorted"
    ## 결과: _________________________________
    """Selection Sort =   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57 

Selection Sort time : 0.63 ms

Insertion Sort =   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57 

Insertion Sort time : 0.02 ms"""
    ## case_type = "reversed"
    ## 결과: _________________________________
    """Selection Sort =   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58 

Selection Sort time : 0.75 ms

Insertion Sort =   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58 

Insertion Sort time : 1.37 ms"""
    ## case_type = "almost_sorted"
    ## 결과: _________________________________
    """Selection Sort =   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57 

Selection Sort time : 0.62 ms

Insertion Sort =   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57 

Insertion Sort time : 0.02 ms"""
    ## case_type = "many_duplicates"
    ## 결과: _________________________________
    """Selection Sort =   0  17  26  29  31  37  38  52  59  82 102 104 109 117 125 125 159 167 187 198 216 226 233 235 249 249 250 264 268 272 294 298 299 306 347 349 353 369 374 386 391 396 396 404 411 415 425 441 477 484 492 495 500 500 500 500 500 500 
500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 516 547 560 566 587 597 602 607 610 615 621 621 649 664 673 674 680 684 704 710 729 738 742 747 756 774 786 790 793 796 798 800 813 824 830 835 844 851 861 868 904 907 925 928 965 977 980 985
Selection Sort time : 0.71 ms

Insertion Sort =   0  17  26  29  31  37  38  52  59  82 102 104 109 117 125 125 159 167 187 198 216 226 233 235 249 249 250 264 268 272 294 298 299 306 347 349 353 369 374 386 391 396 396 404 411 415 425 441 477 484 492 495 500 500 500 500 500 500 
500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 516 547 560 566 587 597 602 607 610 615 621 621 649 664 673 674 680 684 704 710 729 738 742 747 756 774 786 790 793 796 798 800 813 824 830 835 844 851 861 868 904 907 925 928 965 977 980 985
Insertion Sort time : 0.76 ms"""
    ## case_type = "random"
    ## 결과: 
    """Selection Sort =   2   4   9   9  21  21  26  32  33  37  41  45  49  53  53  54  63  70  73  74  85  88  92  94  94 100 108 114 129 135 136 136 144 155 156 157 161 162 169 170 178 192 197 204 208 220 231 236 248 254 262 265 265 265 269 270 272 274 
275 282 293 295 301 319 325 336 348 356 362 372 376 389 390 391 392 396 408 412 415 419 426 429 432 432 436 439 439 443 443 445 445 447 448 449 458 460 465 470 472 472 479 484 490 499 509 509 517 526 534 534 535 539 542 562 565 571 575 577 582 594 597 599 618 621 623 626 635 638 655 659 661 661 663 683 691 696 698 699 702 707 708 713 714 724 725 731 733 736 747 758 759 766 768 771 773 774 776 782 788 790 798 813 818 818 820 821 832 835 835 837 845 851 853 857 860 861 864 866 871 872 874 882 894 896 900 904 913 915 933 934 944 957 958 958 967 969 976 984 993 999
Selection Sort time : 0.77 ms

Insertion Sort =   2   4   9   9  21  21  26  32  33  37  41  45  49  53  53  54  63  70  73  74  85  88  92  94  94 100 108 114 129 135 136 136 144 155 156 157 161 162 169 170 178 192 197 204 208 220 231 236 248 254 262 265 265 265 269 270 272 274 
275 282 293 295 301 319 325 336 348 356 362 372 376 389 390 391 392 396 408 412 415 419 426 429 432 432 436 439 439 443 443 445 445 447 448 449 458 460 465 470 472 472 479 484 490 499 509 509 517 526 534 534 535 539 542 562 565 571 575 577 582 594 597 599 618 621 623 626 635 638 655 659 661 661 663 683 691 696 698 699 702 707 708 713 714 724 725 731 733 736 747 758 759 766 768 771 773 774 776 782 788 790 798 813 818 818 820 821 832 835 835 837 845 851 853 857 860 861 864 866 871 872 874 882 894 896 900 904 913 915 933 934 944 957 958 958 967 969 976 984 993 999
Insertion Sort time : 0.77 ms"""

if __name__ == "__main__":
    main()